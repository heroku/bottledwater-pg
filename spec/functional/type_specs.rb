################################################################################
### This file is automatically generated by spec/bin/generate_type_specs.rb
### It is intended to be human readable (hence being checked into Git), but
### not manually edited.
###
### This is to make it easier to maintain tests for all supported Postgres
### types, even as extensions or new Postgres versions add new types.
###
### It is invoked from spec/functional/schema_spec.rb, which defines shared
### example groups such as 'string type' that this file refers to.
################################################################################

# Arbitrary datetime to test with: first commit to Bottled Water (per Git)
# (plus invented fractional seconds to test roundtrip fidelity)
TEST_DATETIME = Time.new(2014, 12, 27, 17, 40, 15.123456, '+01:00')

shared_examples 'type specs' do

  describe 'abstime' do
    example('internal type not supported') {}
  end

  describe 'aclitem' do
    example('internal type not supported') {}
  end

  describe 'bigint' do
    include_examples 'numeric type', "bigint", 42
  end

  describe 'bit' do
    include_examples 'bit-string type', "bit", "1110", length: 4
  end

  describe 'bit varying' do
    include_examples 'bit-string type', "bit varying"
  end

  describe 'boolean' do
    include_examples 'roundtrip type', "boolean", true
  end

  describe 'bottledwater_error_policy' do
    example('internal type not supported') {}
  end

  describe 'box' do
    include_examples 'geometric type', "box", "(3,4),(0,0)"
  end

  describe 'bytea' do
    include_examples 'binary type', "bytea"
  end

  describe '"char"' do
    example('internal type not supported') {}
  end

  describe 'character' do
    include_examples 'string type', "character", "We can handle unicode: ☃", length: 24
  end

  describe 'character varying' do
    include_examples 'string type', "character varying", "We can handle unicode: ☃"
  end

  describe 'cid' do
    example('internal type not supported') {}
  end

  describe 'cidr' do
    include_examples 'roundtrip type', "cidr", "192.168.1.0/24"
  end

  describe 'circle' do
    include_examples 'geometric type', "circle", "<(1,2),5>"
  end

  describe 'date' do
    include_examples "date", TEST_DATETIME.to_date
  end

  describe 'daterange' do
    include_examples 'roundtrip type', "daterange", "[1837-06-20,1901-01-22)"
  end

  describe 'double precision' do
    include_examples 'numeric type', "double precision", 42
  end

  describe 'ghstore' do
    example('internal type not supported') {}
  end

  describe 'gtsvector' do
    example('internal type not supported') {}
  end

  describe 'hstore' do
    include_examples 'roundtrip type', "hstore", '"pid"=>"2634", "service"=>"bottledwater"'
  end

  describe 'inet' do
    include_examples 'roundtrip type', "inet", "192.168.1.1/24"
  end

  describe 'int2vector' do
    example('internal type not supported') {}
  end

  describe 'int4range' do
    include_examples 'roundtrip type', "int4range", "[1,5)"
  end

  describe 'int8range' do
    include_examples 'roundtrip type', "int8range", "[1,5)"
  end

  describe 'integer' do
    include_examples 'numeric type', "integer", 42
  end

  describe 'interval' do
    include_examples 'interval type', "interval", "01:23:45.123456"
  end

  describe 'json' do
    include_examples 'JSON type', "json", {"service"=>"bottledwater", "pid"=>2634}
  end

  describe 'jsonb' do
    include_examples 'JSON type', "jsonb", {"service"=>"bottledwater", "pid"=>2634}
  end

  describe 'line' do
    include_examples 'geometric type', "line", "{3,4,5}"
  end

  describe 'lseg' do
    include_examples 'geometric type', "lseg", "[(0,0),(3,4)]"
  end

  describe 'macaddr' do
    include_examples 'roundtrip type', "macaddr", '08:00:2b:01:02:03'
  end

  describe 'money' do
    before :example do
      known_bug "multiplied by 100", "https://github.com/confluentinc/bottledwater-pg/issues/60"
    end

    include_examples 'numeric type', "money", 42
  end

  describe 'name' do
    example('internal type not supported') {}
  end

  describe 'numeric' do
    before :example do
      known_bug "replaced by zero", "https://github.com/confluentinc/bottledwater-pg/issues/4"
    end

    include_examples 'numeric type', "numeric", 42
  end

  describe 'numrange' do
    include_examples 'roundtrip type', "numrange", "[1,5)"
  end

  describe 'oid' do
    include_examples 'numeric type', "oid", 42
  end

  describe 'oidvector' do
    example('internal type not supported') {}
  end

  describe 'path' do
    include_examples 'geometric type', "path", "((1,2),(0,0),(3,4))"
  end

  describe 'pg_lsn' do
    include_examples 'roundtrip type', "pg_lsn", '42/BEEFCAFE'
  end

  describe 'pg_node_tree' do
    example('internal type not supported') {}
  end

  describe 'point' do
    include_examples 'geometric type', "point", "(3,4)"
  end

  describe 'polygon' do
    include_examples 'geometric type', "polygon", "((1,2),(0,0),(3,4))"
  end

  describe 'real' do
    include_examples 'numeric type', "real", 42
  end

  describe 'refcursor' do
    example('internal type not supported') {}
  end

  describe 'regclass' do
    example('internal type not supported') {}
  end

  describe 'regconfig' do
    example('internal type not supported') {}
  end

  describe 'regdictionary' do
    example('internal type not supported') {}
  end

  describe 'regnamespace' do
    example('internal type not supported') {}
  end

  describe 'regoper' do
    example('internal type not supported') {}
  end

  describe 'regoperator' do
    example('internal type not supported') {}
  end

  describe 'regproc' do
    example('internal type not supported') {}
  end

  describe 'regprocedure' do
    example('internal type not supported') {}
  end

  describe 'regrole' do
    example('internal type not supported') {}
  end

  describe 'regtype' do
    example('internal type not supported') {}
  end

  describe 'reltime' do
    example('internal type not supported') {}
  end

  describe 'smallint' do
    include_examples 'numeric type', "smallint", 42
  end

  describe 'smgr' do
    example('internal type not supported') {}
  end

  describe 'text' do
    include_examples 'string type', "text", "We can handle unicode: ☃"
  end

  describe 'tid' do
    example('internal type not supported') {}
  end

  describe 'timestamp without time zone' do
    include_examples "timestamp without time zone", TEST_DATETIME
  end

  describe 'timestamp with time zone' do
    include_examples "timestamp with time zone", TEST_DATETIME
  end

  describe 'time without time zone' do
    include_examples "time without time zone", TEST_DATETIME
  end

  describe 'time with time zone' do
    include_examples "time with time zone", TEST_DATETIME
  end

  describe 'tinterval' do
    example('internal type not supported') {}
  end

  describe 'tsquery' do
    # tsquery can't be in a primary key because it can't be indexed directly
    include_examples 'roundtrip type', "tsquery", "'fat':AB & ( 'cat' | 'postgres':* )", as_key: false
  end

  describe 'tsrange' do
    include_examples 'roundtrip type', "tsrange", "[\"1837-06-20 00:00:00\",\"1901-01-22 00:00:00\")"
  end

  describe 'tstzrange' do
    include_examples 'roundtrip type', "tstzrange", "[\"1837-06-20 00:00:00+00\",\"1901-01-22 00:00:00+00\")"
  end

  describe 'tsvector' do
    # tsvector can't be in a primary key because it can't be indexed directly
    include_examples 'roundtrip type', "tsvector", "'brown':3 'fox':4 'quick':2", as_key: false
  end

  describe 'txid_snapshot' do
    example('internal type not supported') {}
  end

  describe 'unknown' do
    example('internal type not supported') {}
  end

  describe 'uuid' do
    include_examples 'roundtrip type', "uuid", 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'
  end

  describe 'xid' do
    example('internal type not supported') {}
  end

  describe 'xml' do
    # xml can't be in a primary key because it can't be indexed directly
    include_examples 'roundtrip type', "xml", "<person name=\"Abraham Lincoln\"><occupations><occupation title=\"President\" /></occupations></person>", as_key: false
  end

end
